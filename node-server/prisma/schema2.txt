generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  ///  owns decks
  wordSets     WordSet[]           @relation("ownerSets")
  ///  decks the user has joined
  adoptedSets  UserWordSetAccess[]
  ///  per-translation progress
  progress     LearningHistory[]
  UserSettings UserSettings[]
}

model UserSettings {
  userId          Int     @id
  sourceLangId    Int     @default(1)
  targetLangId    Int     @default(2)
  darkMode        Boolean @default(false)
  wordsPerSession Int     @default(15)

  user User @relation(fields: [userId], references: [id])
}

model Language {
  id   Int    @id @default(autoincrement())
  code String @unique // "en", "de", …
  name String // "English", …

  translations Translation[]

  /**
   * optional back-links to see which sets use this lang
   */
  sourceSets WordSet[] @relation("sourceLang")
  targetSets WordSet[] @relation("targetLang")
}

model Word {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  translations Translation[]
  WordSetItem  WordSetItem[]
}

model Translation {
  id              Int               @id @default(autoincrement())
  text            String
  word            Word              @relation(fields: [wordId], references: [id])
  wordId          Int
  language        Language          @relation(fields: [languageId], references: [id])
  languageId      Int
  LearningHistory LearningHistory[]

  @@unique([wordId, languageId]) // only one text per lang+word
}

/**
 * ──────── PUBLIC / OWNED WORD SETS ─────────────────────────
 */

model WordSet {
  id       Int     @id @default(autoincrement())
  name     String
  isPublic Boolean @default(false)

  /**
   * owner
   */
  owner   User @relation("ownerSets", fields: [ownerId], references: [id])
  ownerId Int

  /**
   * language direction
   */
  sourceLang   Language @relation("sourceLang", fields: [sourceLangId], references: [id])
  sourceLangId Int
  targetLang   Language @relation("targetLang", fields: [targetLangId], references: [id])
  targetLangId Int

  /**
   * contents & adopters
   */
  items    WordSetItem[]
  adopters UserWordSetAccess[]
}

model WordSetItem {
  wordSet   WordSet @relation(fields: [wordSetId], references: [id])
  wordSetId Int
  word      Word    @relation(fields: [wordId], references: [id])
  wordId    Int

  @@id([wordSetId, wordId])
}

/**
 * user joins (=adopts) a public set
 */
model UserWordSetAccess {
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  set    WordSet @relation(fields: [setId], references: [id])
  setId  Int

  @@id([userId, setId])
}

/**
 * ──────── PROGRESS PER TRANSLATION ─────────────────────────
 */

model LearningHistory {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  translation   Translation @relation(fields: [translationId], references: [id])
  translationId Int

  counter Int  @default(0)
  learn   Json @default("[]")

  @@id([userId, translationId])
}
